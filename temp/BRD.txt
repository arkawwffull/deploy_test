Contents
1. Project Overview	3
1.1 In Scope	3
1.2 Out of Scope	4
1.3 Assumption	4
2. Functional Requirements	5
2.1 User journey	5
2.2 Use case diagram	6
2.3 User Definition	7
2.4 Platform Features for Actors	7
2.5 Use Case List	10
3. Use Case Details	11
3.1 Guest Login	11
3.2 Guest Registration	12
3.3 Patient login	14
3.4 Healthcare Login	15
3.5 Doctor Login	16
3.6 Medical Profile creation	18
3.7 Symptom Checker	20
3.8 Appointment Creation	21
3.9 Create Services	23
3.10 Appointment Search	25
3.11 Create Medical records	27
3.12 Report Generation	28
4. Non-Functional Requirements	30






1. Project Overview

In this age, the focus is on digitalizing user journey to save money and time, and bring convenience to consumers. Consumer interactions which couldn't be imagined to be digitalized in the past, have been made possible through technology. Once such digitalization, which has been popular with consumers, is retail grocery shopping. Such advancements, have made life easy for everyone, especially for people with physical conditions due to diseases or age. Yet, it has been observed that the digitalization of patients needing healthcare is limited in terms of outreach and services.
Hence, this app has been designed to improve the reach of the small to medium size healthcare providers to patients. Often, owing to high expenses such healthcare providers shy away from establishing a digital journey, for their clients. Hence, they have a limited customer base and a high churn ratio. This app, hosted on a multi-tenant cloud environment, will help these healthcare providers improve their market share through outreach and customer satisfaction.
This app has simple yet high user experience journeys designed for patients. With minimal clicks and assistance patients can walk through this app with least hindrance. They can manage their health consultations from past and present at one site with features such as return visit scheduling, rescheduling, digital prescriptions and teleconsultations. 
Initially this app would provide out-patient services such as appointment booking and management. However, the framework will allow faster addition of newer services and more stakeholder journeys. 
Each healthcare provider would have their own app with their data separate from other providers in a multi-tenant SAAS environment.
The plan is to cover 80% of the SME in the healthcare provider market of any metropolitan city.

1.1 In Scope

Initially this app will let consumers register and create their medical profile. They can then book in-patient or virtual appointments and pay for it online through multiple channels. They can upload their past medical history, download prescriptions, book follow-up visits to a doctor amongst features described in this document.
Healthcare providers can manage their services list, onboard healthcare practitioners, remove practitioners, manage appointments, and upload prescriptions and medical history for patients. They will have the option to generate management reports of their financial, operational or customer data.

Doctors can view their appointments, update patient medical history, change appointment status, create patient prescription and generate a printout of the prescription for the patient.
The app will be hosted on a multi-tenant SAAS platform, where the data of each service provider will be kept secure and distinct from other providers. Patient medical records EHR will be maintained in the client facility. This app will fetch, insert and update EHR data but, would not store the data in the app's multi-tenant cloud platform. 
All authentication processes would comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private
The process of registration of a patient is fully automated. The registration of a health care staff will be created by a system admin. Login for a healthcare professional or doctor would be created by a health care staff while onboarding individual doctors. 
Only a patient can create an appointment, but is not allowed to delete an appointment. They can reschedule an appointment before 24hrs. Doctors can modify appointments but cannot delete it. Appointments can only be deleted by healthcare staff. 
Patients can only view prescriptions, whereas doctors and healthcare staffs can create and modify it. 
Management reports can be generated by healthcare staffs only.
Patients with be given an option of an AI driven symptom checker. This chat bot will analyse patient's symptoms and, suggest possible causes and the type of doctor to consult.

1.2 Out of Scope
Integration with third party suppliers such as ambulance operators, pharmacist, and medical tourists are out of scope of this app presently. Currently this app doesn't support the IPD journey of patients.
Since this is a multi-tenant SAAS environment, this app would not follow an aggregator model. Hence, each patient will be linked to a single healthcare provider app.

1.3 Assumption
This projects assumes that healthcare providers will allow interfacing this app with their EHR systems.


2. Functional Requirements

2.1 User journey

The swim lane diagram below describes the journey of the actors in the system. Although the journeys are individual however there happens multiple exchange and sharing of information. These are represented by the vertical, coloured arrows in the diagram. 


       Healthcare app user journey



2.2 Use case diagram

The diagram below depicts pictorially the interactions between the various users/actors and the healthcare system. 



 Use Case Diagram


2.3 User Definition

The following type of users will have access to the platform:

User TypeUser DefinitionSystemGuestsA guest is an user who logs in just to explore the application Web/MobilePatientA patient is a guest who has registered in the system to avail healthcare servicesWeb/MobileHealthcare StaffThe users who create services, manage appointments and generate reportsWeb/MobileDoctorA healthcare professional who generates prescription for the patients.Web/MobileSystem AdminAll system configuration-related technical activities will be handled by System Admin.Web/Mobile/Prod Environment
2.4 Platform Features for Actors

UserKey Functionalities to be ProvidedGuest
? Should be able to log in with a valid mobile number.	
? User should receive an OTP in his phone.
? User should be allowed to enter the app with this OTP. 	
? The system should give a tour of the app to the user.
? User will be given an option to register after the tour.
? User will be allowed to logout of the system any time.
? User will be displayed the registration page straightaway on logging back. 
? User should be allowed to register with relevant details.
? Registration details with the registration number should be emailed to the user 
Patient
? Patient can login with a registered mobile number.
? The system will display the appointment dashboard on login.
? User will be able to create new appointments from the dashboard.	
? User will be allowed to reschedule appointments from the dashboard.
? User will be allowed to search for an appointment from the dashboard page.
? System will display the current list of doctors to the patient.
? System will synchronise the appointment calendar frequently. 
? System will allow payments for the bookings through as many channels.
? Notifications of a successful appointment creation will be texted and emailed to the user.
? User will be allowed to create revisit appointments.
? Users can reschedule appointments before 24 hrs. 
? Date of appointment should be updated for rescheduled appointments.
? Status and date of appointments should be updated for revisit appointments.
? User will be able to update his medical profile within an appointment or from the profile page.
? User can view prescription for all his appointments
? The system will roll up prescriptions in the same appointment for revisit appointments.
? System will give an option of a symptom checker to find possible illnesses.
? Symptom checker will also suggest the type of doctor, patient may consult.
? User will be allowed to skip the symptom checker functionality.
? User will not be allowed to delete appointments.
? System will notify the user if an appointment is deleted.
Hospital Staff
? Only a system admin can create a hospital staff account.	
? Staff can login with his registered mobile number and OTP.
? On a successful login the system will display a dashboard of services, doctors, patients and appointments.
? On multiple incorrect login by a staff his account would be locked.
? From the services dashboard the staff can create new, edit or delete services.
? Staff can assign doctors to services.
? Staff can onboard and deboard doctors onto the system. 
? Staffs can cancel or delete appointments from the system.
? Staffs cannot delete doctors with open appointments.
? Staffs will not be allowed to create appointments.
? User will be allowed to create appointment prescriptions.
? User can give printout of prescriptions.
? Staffs can modify appointment status. 
? User will able to search open appointments with filters.
? User can access closed appointment from a historical data option.
? User can logout anytime successfully	
? Staff cannot delete his own account.
? Staffs can edit the medical profile of any user.
? Staff can generate management reports from the system.	
Doctor
? Only a hospital staff can register a doctor into the system.
? A doctor can login with a registered phone number and OTP.
? On multiple incorrect login this user account would be locked.
? On logon, the user will be displayed his upcoming and open appointments.
? Doctors will be notified through email and notifications when a new appointment is created.
? Doctor can search for closed appointments from a historical database.
? User will be allowed to upload appointment prescriptions.
? User can give printout of prescriptions.
? Doctors can modify appointment status. 
? User can search open appointments with filters.
? User can logout anytime successfully.	
? Doctor cannot delete his own account..
? Doctor can edit the medical profile of any user from his appointments.
? Doctors cannot see appointments of other doctors.
? User cannot create or delete appointments.



2.5 Use Case List
Use Case IdUse Case NameActor(s)Gen 001Guest LoginGuestGen 002Healthcare LoginHospital StaffGen 003Guest RegistrationGuestB2C 001Patient LoginPatientB2B 001Doctor LoginDoctorB2C 002Symptom CheckerPatientB2C 003Appointment CreationPatientB2C 004Medical Profile CreationPatient, Doctor, Hospital StaffB2C 005Create servicesHospital StaffB2C 006Appointment searchHospital Staff, DoctorsB2C 007Create medical recordsDoctors, Hospital StaffGen 004Report GenerationHospital Staff
Gen 001: Guest Login: A guest logs into the app with his unregistered mobile number.
Gen 002: Healthcare login: A healthcare staff logs into the app with his registered mobile number.
Gen 003: Guest registration: A guest registers as a patient in the application.
B2C 001: Patient Login: A patient logs into the app with his registered mobile number.
B2B 001: Doctor Login: A doctor logs into the app with his registered mobile number.
B2C 002: Symptom Checker: An AI driven chat bot used by patients to find out likely health issues and the type of doctor to consult.
B2C 003: Appointment Creation: Patient uses this function to create a fresh appointment or a revisit. Patient has an option to reschedule an appointment, 24 hours prior.
B2C 004: Medical Profile Creation: Patient, doctors, healthcare staff will use this feature to update patient's past medical conditions such as allergies, chronic illness etc.
B2C 005: Create Services: Healthcare staff uses this function to create services such as a doctor consultation and onboard doctors to these services.
B2C 006: Appointment Search: Hospital staffs and doctors will use this function to search from a long list of appointment with various filters. Staffs can delete appointments from here.
B2C 007: Create medical records: Doctors and staffs would use this to generate prescription for the patients. 
Gen 004: Report Generation: Hospital staff will use this feature to create management reports.

3. Use Case Details

3.1 Guest Login
Use Case ID: Gen 001
Use Case Name: Guest Login
Actor(s): Guest 
Pre-conditions:
* The user has installed the healthcare app and has an internet connection.
* The user does not have an existing account or has not been registered in the system.
Trigger:
User logs into the healthcare app for the first time

Flow of Events:
1. User opens the healthcare app
o The user launches the healthcare app on their mobile device.
2. Login screen is displayed
o The app displays the login screen with a field for entering mobile number for validation.
o The user provides the number and clicks login.
3. Authentication validation
o The app sends an OTP to the mobile phone.
o The user provides that OTP onto the app for validation. 
o If the credentials are valid, the system displays an introduction page.
4. User logs out
o The user can log out by selecting the "Logout" option. Once logged out, the user is returned to the login screen.
5. Guest Registration (Extends)
o Instead of logging out user goes forward in the app to register for services.

Post-conditions:
* The user is given a tour of the app services. 
Alternate Flows:
1. Invalid OTP
o If the user enters incorrect registration details (e.g., wrong OTP) an error message is displayed, prompting the user to try again.
2. Account Locked
o If the user attempts too many incorrect OTPs, the mobile number may be temporarily barred from login. A message explaining the lockout duration can be displayed.
Exceptions:
* Server Down: If the backend authentication service is unavailable, the user will be unable to log in, and a message is displayed stating the service is temporarily unavailable.
* Network Connectivity Issues: If the user's device cannot connect to the internet, they will be notified of the connectivity problem and prompted to check their network settings.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.

3.2 Guest Registration
Use Case ID: Gen 003
Use Case Name: Guest Registration
Actor(s): Guest 
Pre-Conditions(s):
* The user has installed the healthcare app and has an internet connection.


Trigger:
A guest tries to register as a patient to avail services.

Flow of Events:
1. Provides Personal details
o The patient provides details such as Full name, Date of Birth, gender, address, phone number, email address, emergency contact.
2. User submits the form
o The data is validated for inconsistencies.
3. Generates PRN
o The user is emailed a unique patient registration number. 
4. Optional: Medical profile creation (extends)
o The patient would be prompted for major illnesses, allergies, chronic conditions, medications etc.
5. Optional: Patient Symptom Checker (extends)
6. Optional: Appointment generation (extends)
o If the user wants to consult a doctor he can search and book an appointment.
7. Optional: User logs out
o The user can log out by selecting the "Logout" option. Once logged out, the user is returned to the login screen.

Post-Conditions(s):
* The patient is taken to the symptom checker app.
Exceptions:
* Server Down: If the backend authentication service is unavailable, the user will be unable to log in, and a message is displayed stating the service is temporarily unavailable.
* Network Connectivity Issues: If the user's device cannot connect to the internet, they will be notified of the connectivity problem and prompted to check their network settings.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.

3.3 Patient login
Use Case ID: S2C 001
Use Case Name: Patient login
Actor(s): Patient
Pre-Conditions(s):
* The user has installed the healthcare app and has an internet connection.
* His phone number is registered as a patient
Trigger:
A patient logs into the healthcare app to avail services.

Flow of Events:
1. User provides his registered mobile number on to the login screen.
2. Authentication validation
o The app sends an OTP to the mobile phone.
o The user provides that OTP onto the app for validation. 
o If the credentials are valid, the system displays a dashboard of appointments.
3. Optional: Medical profile creation (extends)
o The patient would be prompted for major illnesses, allergies, chronic conditions, medications etc.
4. Optional: Patient Symptom Checker (extends)
5. Optional: Appointment generation (extends)
o If the user wants to consult a doctor he can search and book an appointment.
6. Optional: User logs out
o The user can log out by selecting the "Logout" option. Once logged out, the user is returned to the login screen.

Post-Conditions(s):
* The patient is successfully taken to the appointment booking page.


Exceptions:
* Server Down: If the backend authentication service is unavailable, the user will be unable to log in, and a message is displayed stating the service is temporarily unavailable.
* Network Connectivity Issues: If the user's device cannot connect to the internet, they will be notified of the connectivity problem and prompted to check their network settings.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.

3.4 Healthcare Login
Use Case ID: Gen 002
Use Case Name: Healthcare Login
Actor(s): Hospital Staff 
Pre-Conditions(s):
* The user has installed the healthcare app and has an internet connection.
* The user should have a valid mobile number registered as a healthcare user by system admin.
Trigger:
A staff logs into the healthcare app to provide services to patients. The healthcare provider here is a hospital administrator or staff to manage patient appointments and offer services.

Flow of Events:
1. User provides his registered mobile number onto the login screen.
2. Authentication validation
o The app sends an OTP to the mobile phone.
o The user provides that OTP onto the app for validation. 
o If the credentials are valid, the system displays a dashboard of services.
3. Optional: Create Services (extends)
4. Optional: User logs out
o The user can log out by selecting the "Logout" option. Once logged out, the user is returned to the login screen.

Post-Conditions(s):
* A dashboard of services, doctors, appointments, graphs are displayed to the user.
Alternate Flows:
1. Mobile number not registered as a service provider
o If the user enters a mobile number not registered as a service provider the app tour for guests is displayed.
2. Invalid OTP
o If the user enters incorrect login details (e.g., wrong OTP) an error message is displayed, prompting the user to try again.
3. Account Locked
o If the user makes too many failed attempts, the mobile number may be temporarily barred from login. A message explaining the lockout duration can be displayed.
Exceptions:
* Server Down: If the backend authentication service is unavailable, the user will be unable to log in, and a message is displayed stating the service is temporarily unavailable.
* Network Connectivity Issues: If the user's device cannot connect to the internet, they will be notified of the connectivity problem and prompted to check their network settings.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.


3.5 Doctor Login
Use Case ID: B2B 001
Use Case Name: Doctor login
Actor(s): Doctor 


Pre-Conditions(s):
* The user has installed the healthcare app and has an internet connection.
* Doctor's mobile number has been registered by the healthcare service provider during creation of a service.
Trigger:
With the registered phone number a doctor logs into the app to check his patient appointments.

Flow of Events:
1. User logs into the system with his mobile number
2. Authentication validation
o The app sends an OTP to the mobile phone.
o The user provides that OTP onto the app for validation. 
o If the credentials are valid, the system displays a dashboard of appointments.
3. Optional: Uploads medical records (Extends)
4. Optional: User logs out
o The user can log out by selecting the "Logout" option. Once logged out, the user is returned to the login screen.

Post conditions:
* The doctor is shown his list of appointments with all the details
* He can search for patient appointments with relevant filters.
Alternate Flows:
1. Mobile number not registered as a doctor
o If the user enters a mobile number not registered as a doctor the app tour for guests is displayed.
2. Invalid OTP
o If the user enters incorrect login details (e.g., wrong OTP) an error message is displayed, prompting the user to try again.
3. Account Locked
o If the user attempts too many failed OTP attempts, the mobile number may be temporarily barred from login. A message explaining the lockout duration can be displayed.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.

3.6 Medical Profile creation
Use Case ID: B2C 004
Use Case Name: Medical Profile creation
Actor(s): Patient, Doctor, Hospital Staff
Pre-Conditions(s):
* The app complies with healthcare data regulations (e.g., HIPAA, GDPR)
* The user has a registered patient, doctor or a Healthcare staff account.
* Patient accesses the profile either from the registration page, appointment page or the profile section.
* Healthcare personnel and doctors accesses the profile from the appointment section. 
* Multiple actors cannot update the data at the same time.
Trigger:
A patient tries to create or update his medical profile in the app. This information could also be created by medical professionals like hospital stuffs or the doctors treating the patient. 

Flow of Events:
1. User logs into the app with a valid username and password
o The patient is logged in a patient profile.
o The healthcare provider is logged in a healthcare profile.
o Doctor is logged in a doctor profile.
2. User visits the patient medical history page
o The patient goes to the profile section from the menu which contains a medical history section.
o The patient goes to the appointment section which contains a medical history information hyperlink.
o The service provider or the doctor goes to the appointment page for the patient, which contains a medical history information hyperlink.
3. User edits the information 
o The user clicks on the edit option on medical history page to update or enter the medical information for the patient. Information such as
* Chronic conditions (e.g., diabetes, hypertension), surgeries, allergies.
* Medications: Current prescriptions, over-the-counter medications, dosage.
* Family History: Hereditary conditions (e.g., heart disease, cancer).
* Lifestyle Factors: Smoking, alcohol consumption, exercise habits.
* Immunization Records: Vaccinations and dates.
4. User submits the medical history information 
o The form checks for mandatory information and terms and conditions and throws and error for any missing info.
o The app then saves the information in the form. 
5. Optional : Patient books an appointment (extends)
o Patient from the appointment page continues to book an appointment with a doctor.
6. Optional : Service provider uploads medical records (extends)
o Hospitals or doctors after updating the patient medical profile, continues to upload medical records for the latest appointment.

Post-Conditions(s):
* The user is given a notification that the data has been successfully updated. 
* The data should be visible by all the actors.
* Data should be consistent.
Alternate Flows:
1. Concurrent Updates
o If patient, healthcare provider or the doctor tries to save the information concurrently, an error message will be displayed saying the update couldn't be completed and could be tried later.
Exceptions:
* Server Down: If the backend authentication service is unavailable, the user will be unable to log in, and a message is displayed stating the service is temporarily unavailable.
* Network Connectivity Issues: If the user's device cannot connect to the internet, they will be notified of the connectivity problem and prompted to check their network settings.
Special Requirements:
* Security and Privacy: All authentication processes should comply with relevant data protection laws (e.g., HIPAA, GDPR) to ensure patient data remains secure and private.
* Accessibility: The login screen should be accessible to users with disabilities (e.g., screen readers, large fonts, etc.).
* Multi-platform Support: The login process should be consistent across both mobile and web versions of the healthcare app.

3.7 Symptom Checker
Use Case ID: B2C 002
Use Case Name: Symptom Checker
Actor(s): Patient 
Pre-Conditions(s):
* The user is a registered patient.
* The system has access to a comprehensive medical database and diagnostic algorithms.
Trigger:
In this use case, a patient is trying to find solution to her health issues by providing the symptoms to a chat bot. This bot would then suggest likely causes and corresponding remedies. 

Flow of Events:
1. User launches the symptom checker 
o User clicks on the symptom checker link on the appointments page and launches a chat bot.
2. A chat bot opens and takes inputs from the patient
o The bot asks the patient to describe her symptoms from an initial list of health issues generated by the AI.
3. Patient provides answers to the AI bot
o The patient selects a symptom from the initial list prompting, the bot to give her further questions to answer.
4. Conversation between the user and the chat bot
o A continuous dialogue ensues between the bot and the patient.
o The questions after each round gets more specific based on medical parameters.
5. The Gen AI driven bot gives a list of likely causes
o The bot eventually lists down a list of likely causes with probability as most likely to least likely.
6. Chat bot recommends the next steps 
o The chat bot categorises actions based on its final recommendation list. Categories such as taking rest, getting a pathology test done or visiting a health care professional.
o It provides contacts of diagnostic centers and offers on prices.
o It also suggests a list of doctors in the hospital with their available time slots.
7. Optional: Patient creates an appointment (extends)
o Patient from the appointment page continues to book an appointment with a doctor of her choice.

Post-Conditions(s):
* The chat bot minimizes after certain time of inactivity and the past chat is deleted.
Alternate Flows:
1. Incorrect actions by patient
o If the patient writes in a language not understood by the bot, it would give appropriate messages.
o If the patient doesn't select from a list provided by the AI, it would advise user to do so.
o After multiple incorrect or unpredictable actions by the patient the chat would restart from the beginning.
2. User closes the Bot
o If the patient closes the chat window in the middle of the conversation the bot closes down and clears.
3. User minimizes the Bot
o In case the patient minimizes the chat bot, the chat window gets minimized but the chat thread is retained for the user to continue later.

3.8 Appointment Creation
Use Case ID: B2C 003
Use Case Name: Appointment Creation
Actor(s): Patient 
Pre-Conditions(s):
* The user is a registered patient.
* User is on the appointments page
* A payment gateway is integrated with the application.
* The calendar for the healthcare services should be updated and synchronized.
Trigger:
A patient tries to book an appointment with a doctor from the available list of doctors by the healthcare provider. 

Flow of Events:
1. Optional: Patient Symptom checker (Include) 
2. Patient clicks on "create an appointment" option. 
3. Patient selects the type of appointment
o The patient selects the type of healthcare professional e.g. General physician, cardiologist, dermatologist etc.
o They can select the type of consultation (e.g. Remote, hospital visit)
4. Patient selects a date for the appointment 
o The patient provides a date and receives a list of available professionals and timings. 
5. Patient selects a doctor
o The Patient selects a doctor of their choice from the available list.
o More details about the doctor and appointment is displayed to the patient.
6. The appointment is finalized
o The patient continues with the selected appointment.
o An invoice is generated for the service.
o Various payment methods are displayed.
o The patient makes the payment through one of the various payment methods.
7. Confirmation of appointment
o The system displays a confirmation of the appointment.
o An email confirmation is sent to the patient email id.
o A message is sent to her mobile number. 
8. Notifications of appointment 
o A text reminder is sent 24 hours before the appointment to the patient.
o An email reminder is sent 24 hours before the appointment to the patient.
o A reminder is sent 24 hours before the appointment to the doctor.
9. Online consultation link
o If the appointment is online then an online consultation link is sent 24 hours before the appointment.
10. View Appointment details
o User should be able to search for current appointments based on date and appointment status.
o When user clicks on an appointment they get all the details such as the latest medications and diagnosis. 

Post conditions:
* The appointment is listed in the list of the patient appointments with the correct details. 
* The status of the appointment is displayed as Upcoming/New.
* After the appointment is closed by the doctor user will have an option to rate the appointment.
Alternate Flows:
1. Patient reschedules the appointment 
o The patient has an option to reschedule an appointment 24 hours before time.
o After clicking on the reschedule option he will be given a list of available slots for the doctor.
o He can choose a slot and the appointment will be updated and accordingly notification sent to the doctor and patient.
o An email will the latest appointment details will be emailed to the patient.
2. Patient books a follow-up appointment
o Patient clicks on new appointment button and chooses the option of follow up appointment.
o A list of past appointment in the last six months is displayed.
o Patient chooses one of the appointments and clicks on next.
o The list of available slots with the doctor is displayed.
o He selects a slot and makes the payment.
o The status of the old appointment changes to follow up with the new date and time.
Exceptions:
* Payment Server Down: If the Payment server is down or unreachable then appropriate message would be displayed to the patient.
* Payment fails: If the payment fails, then the patient is displayed appropriate information and the money if deducted is refunded to the patient.

3.9 Create Services

Use Case ID: B2C 005
Use Case Name: Create services
Actor(s): Hospital staff
Pre-Conditions(s):
* The user is a registered service provider.
* The system has payment gateways registered for services.
Description:
In this use case, a hospital or a nursing center staff creates services such as doctors' appointments, ambulance 

Flow of Events:
1. User navigates to create services
o The user navigates to their dashboard to access the "create or manage services option".  
2. User provides service information
o Information can include 
1. Service Name (e.g., "General Consultation," "Dental Cleaning," "Ambulance", "Physical Therapy")
2. Service Description 
3. Doctors list along with their email id and contact number and availability
4. Service Type (e.g., in-person, online)
5. Price or Payment Information 
6. Availability (days and times the service is available)
7. Special Instructions (e.g., "Please bring your medical history" or "No preparation required")
3. System checks for mandatory or missing information and incorrect details.
4. User reviews and submits the information 
o The healthcare provider reviews the service info and submits.
o A confirmation message is displayed.
o The user can see his current list of services and details.
o An email notification is sent with the new service details.
o An email notification is sent to the doctors about the new service.


Post-Conditions(s):
* All services gets listed in the dashboard.
* Patients are able to see the services from their create appointment section.
* Login password is created for doctors
Alternate Flows:
1. Healthcare provider edits an existing service
o Healthcare provider selects an existing service and updates its price, availability, special instructions
o Healthcare provider updates the list of doctors, ambulance contact numbers, physiotherapy contact details
o A confirmation messages is given to the user after submission
o The system gives a notification after user confirms the update.
2. Healthcare provider deletes an existing service
o Healthcare provider selects an existing service and deletes it.
o Healthcare provider deletes doctors, ambulances, physiotherapists from the system
o A confirmation messages is given to the user after submission
o The system gives a notification after user confirms the deletion.
Exceptions:
* Doctors with open appointments can't be deleted: If a doctor has open appointment(s) then the system doesn't allow the staff to delete the doctor. The system will ask the user to delete the appointments under the doctor.
* Updating availability of doctors with open appointments: If the availability of a doctor is updated and it clashes with open appointments, the system will ask the user to delete the appointments first.
* Payment gateway not available: If the healthcare service provider tries to set up or edit a paid service and the payment gateway is not functional, then the system will generate an alert
* Duplicate services: If the user tries to create multiple doctors, services, ambulance providers, physio therapists with the same details, then the system will generate an alert.


3.10 Appointment Search
Use Case ID: B2C 006
Use Case Name: Appointment search 
Actor(s): Hospital staff, Doctor
Pre-Conditions(s):
* The user is a registered service provider or a doctor.
* There are appointments created by patients present in the systems
* Doctors are not allowed to delete appointments. 
Trigger:
In this use case, a hospital staff or a doctor, searches for appointments created by patients.. 

Flow of Events:
1. User navigates to the appointment section
o The user navigates to the appointment page.  
2. User searches for appointments based on the following criteria
* Date Range
* Patient Name, Id 
* Appointment Status: Filter appointments by status (e.g., scheduled, completed, cancelled, missed).
* Appointment Type: Search based on the type of appointment (e.g., consultation, follow-up)
* Doctor's Name (When user is a hospital staff)

3. System retrieves correct information
4. Provides pagination of results.
5. Sorts results
o Result is sorted based on Date and then Doctor's name, for hospital staffs
o Result is sorted based on Date for doctors
6. User views the appointment information 
o The user after clicking on an appointment gets the full details of the appointment.
o Optional: Update medical records (Extends)
7. Optional: Hospital Staff deletes the appointment
o On the detail page the user gets an option to delete the appointment.
o Once clicked the system asks for confirmation.
o Once confirmed the appointment is deleted
o Notification is sent to the patient and the doctor.
o The patient is refunded full money.
o The search result is refreshed.
8. Optional:  Hospital Staff deletes multiple appointment
o  The option to delete multiple appointments gets activated when search result is from a single doctor on a single date. 

Post-Conditions(s):
* Accurate updated list of appointments are displayed to the user.
Alternate Flows:
1. No appointments match the search criteria 
o If no appointments match the search criteria the search will show an empty list with a message.
2. Appointment which are closed to be shown as historical data 
o Under historical data section, user will be able to search appointment based on date, doctor's name and patient's name.
Exceptions:
* Past Appointments with status as open cannot be deleted.
* Closed Appointments will not be shown in the search results.

3.11 Create Medical records
Use Case ID: B2C 007
Use Case Name: Create medical records
Actor(s): Doctor, Hospital staff
Pre-Conditions(s):
* The user is a registered doctor in the system.
* Doctor has appointments created by patients in the systems.
* The system is connected to the EHR system of the health care provider.
* Data of the patient will lie in the EHR system, this system will create, retrieve and update that data.
* Data privacy laws according to the relevant authorities would be followed.
Triggers:
A doctor after performing the health check of a patient tries to upload the diagnosis details in the app. 

Flow of Events:
1. The appointments page is displayed to the doctor.
o The list of appointments is displayed and is sorted based on the appointment date starting from the current date
o The second parameter for sorting would be the appointment time.
2. Doctor selects an appointment
o Doctor selects an appointment by either clicking on an appointment from the list.
o Doctor can also search for an appointment based on the patient name or date or both.
o The appointment page opens up with a form.
3. Doctor updates the appointment form with the following details
* Diagnosis 
* Medications
* Follow up date
* Any lab tests suggested 
* Reports such as Xray, ECG, Lab results can be uploaded with description
4. User updates the status of the appointment
o The appointment is updated with status such as closed.
5. User submits the data 
o The system verifies missing or incorrect info and throws notifications.
o After confirmation the system submits the data successfully.
6. The form is filled up with the latest info.
o The diagnosis section gets updated with a time stamp
o The medication section gets updated with a time stamp.
7. Patient gets an email with the prescription details
o Patient gets details of the current diagnosis and medication details.
8. User gives a printout of the prescription.
o The printout will have details from the latest time stamp only.

Post-Conditions(s):
* All the info is stored in the EHR system of the hospital.
* None of this data is stored in the app cloud.
* A printout is generated with the correct format.
* This information is made available to the patient, healthcare provider and the doctor.
Alternate Flows:
1. Healthcare providers can also upload the health record
o Healthcare providers can update the same appointment details just like a doctor 
Exceptions:
* If the size of the scanned files exceeds a certain limit an exception is thrown
* If the file upload system doesn't work then a message will be displayed to the user.
* If the connection with the EHR system is broken then the data will not be saved anywhere.
* Patients will only have view access to the data and no edit access.

3.12 Report Generation
Use Case ID: Gen 004
Use Case Name: Report generation
Actor(s): Hospital staff
Pre-Conditions(s):
* The user is a registered staff in the system.
* The system has an integrated reporting tool.
* The system is connected to the EHR system of the health care provider.
* Data of the patient will lie in the EHR system, our system will retrieve the data for reporting purposes.
* Data privacy laws according to the relevant authorities would be followed.
Trigger:
A hospital staff wants to generate a management report on finance, operations and customers of the healthcare provider.

Flow of Events:
1. The user accesses the reporting tools.
o User logs into the system.
o On the dashboard page the reporting tool is present.
2. User chooses the type pf reports 
o User may select financial, operations or customer reports
3. User selects the indictors for reporting
o Financial, operations or client satisfaction indicators are selected
4. User defines the KPI for  the reports
o KPI for the various reports are defined e.g. average wait time, patient satisfaction scores, revenue vs cost, throughput of various departments
5. User generates the report
o User selects the time period of the report e.g. daily, monthly, and weekly.
o User clicks on generate.
o The report is successfully displayed.
6. Exporting the report
o User select a file format e.g. Pdf, excel, csv to export the report.
7. Printing the report
o User has an option of printing the report.
8. Sharing the report
o User can share the report with other users through the app.
o The report is attached to an email and sent to the other user.

Post-Conditions(s):
* The report is successfully generated with the correct data.
Alternate Flows:
o User can generate the report from the reports section in the menu.
Exceptions:
* System throws a warning message for missing data
* If the connection with the EHR system is broken then the report will not be generated and will throw an error message.
4. Non-Functional Requirements

ParametersRequirementsPerformance / Response Time95% of API requests should respond within 100ms
Database Query Response Time: For transactional queries, response time should be < 200ms
Latency: < 2 seconds for the initial load time of any page for 95% of users.
Failover & redundancyDisaster recovery plan is expected with a recovery time objective (RTO) and recovery point Objective (RPO)
Automatic failover mechanism in place for critical components.
Replicated database.
Data Recovery: Recovery time should be < 1 hour for any data loss incidents.Scalability Should be scalable for increased users without compromising performance or security. Monitoring and AlertsSystem health monitoring for, application errors, API latency, performance metrics, security incidents, suspicious activity, change in user roles, access of protected data, increase in system loadData Protection & privacyMinimal data collection and processing, encryption of personal sensitive data at rest and in transit, limiting data access, prevent unauthorized data disclosure or access or modification or deletion, archive or delete personal data after a period of no use, data anonymized or pseudonymizedSecurity Access control: Role based Access control, principal of least privilege 
Authentication : MFA, robust user management
Audit trails: Logging and auditing of actions related to personal data. And secure storage of logs.Data integrity System should ensure PHI is accurate and complete through checks.
Regular Backups should be taken.
Auditing: Changes to PHI should be tracked. User right and consentSystem must allow user to exercise their rights on their data for access, rectification, portability and processing.Interoperability To facilitate exchange of EHR data between systems, formats such as HL7, FHIR or CDA should be supported.
API Security: Data exchange with third party through API should happen securely with authentication and authorization.  Compliance and legalThe system should facilitate creation of Compliance reports.
Third parties such as the SaaS provider should comply with HIPAA.
Data sovereignty: For SaaS, data should be stored and processed in jurisdictions meeting HIPAA compliance.
Payment Processing Gateway compliances to be followed.MaintainabilityThe mean time to restore the system (MTTRS) following a system failure must not be greater than 1 hour. MTTRS includes all corrective maintenance time and delay time.AvailabilityThe application must be available to Indian users 99 percent of the time every month during business hours IST.
1


